name: Quality Gates

on:
  pull_request:
    branches: [ main, test-deployment ]
  push:
    branches: [ main, test-deployment ]

jobs:
  quality:
    name: Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Run TypeScript type check
        run: npm run typecheck
        
      - name: Run unit tests
        run: npm test
        env:
          CI: true
          
      - name: Run integration tests
        run: npm run test:integration
        env:
          CI: true
          
      # Temporarily disabled coverage check
      # - name: Check test coverage
      #   run: |
      #     npm run test:coverage
      #     coverage=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
      #     if (( $(echo "$coverage < 80" | bc -l) )); then
      #       echo "Test coverage is below 80%"
      #       exit 1
      #     fi
          
      - name: Run security audit
        run: npm audit
        
      - name: Run dependency check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'MCP BLE Server'
          path: '.'
          format: 'HTML'
          out: 'reports'
          
      - name: Run performance check
        run: npm run perf:check
        
      - name: Run memory leak check
        run: npm run mem:check
        
      - name: Upload quality reports
        uses: actions/upload-artifact@v3
        with:
          name: quality-reports
          path: |
            reports/
            coverage/
            
  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check documentation
        run: npm run docs:check
        
      - name: Generate documentation
        run: npm run docs:generate
        
      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: docs/
          
  accessibility:
    name: Accessibility Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run accessibility tests
        run: npm run a11y:check
        
      - name: Upload accessibility report
        uses: actions/upload-artifact@v3
        with:
          name: accessibility-report
          path: reports/accessibility/
          
  notify:
    name: Notify Results
    needs: [quality, documentation, accessibility]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        if: failure()
        run: |
          curl -X POST ${{ secrets.SLACK_WEBHOOK_URL }} \
            -H 'Content-Type: application/json' \
            -d '{
              "text": "Quality checks failed for ${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "attachments": [
                {
                  "color": "danger",
                  "fields": [
                    {
                      "title": "Failed Jobs",
                      "value": "${{ join(needs.*.result, '\n') }}",
                      "short": false
                    }
                  ]
                }
              ]
            }' 