---
description: Handles predictive scaling, resource forecasting, and trend analysis for BLE device management and connection optimization
globs: ["src/metrics/predictive*.js", "src/metrics/*forecasting*.js", "src/metrics/*trend*.js", "src/metrics/*scaling*.js"]
alwaysApply: false
---


# predictive-algorithms

Core Predictive Components:

1. Load Prediction System (src/metrics/predictiveScaling.js)
- Time-series based load forecasting using rolling 1-hour windows
- 5-minute interval predictions up to 1 hour ahead
- Minimum 12 data points required for prediction validity
- Correlation tracking between predicted vs actual loads
Importance Score: 95

2. Resource Usage Forecasting (src/metrics/resourceForecasting.js)
- Multi-resource prediction matrix covering memory, CPU, network
- Resource-specific validation boundaries:
  * CPU: 0-100% utilization range
  * Memory: Positive value constraints
  * Network: Bandwidth thresholds
- Cross-resource correlation analysis for prediction accuracy
Importance Score: 90

3. Trend Analysis Engine (src/metrics/trendAnalysis.js)
- Resource utilization trend detection with 10% change thresholds
- Custom confidence scoring using coefficient of variation
- Rolling 1-hour historical data window
- Trend classifications: increasing, decreasing, stable
Importance Score: 85

4. Scaling Intelligence (src/metrics/scalingRecommendations.js)
- Resource threshold monitoring (80% default)
- Multi-factor scaling decision matrix
- 300s minimum interval between scaling recommendations
- Detailed reasoning audit trail for decisions
Importance Score: 88

Key Business Rules:
- Predictive window sizes: 5-minute intervals, 1-hour horizon
- Minimum data points: 12 for valid predictions
- Trend classification threshold: 10% change
- Resource monitoring thresholds: 80% default
- Scaling recommendation cooldown: 300s

File Dependencies:
- src/metrics/predictiveScaling.js
- src/metrics/resourceForecasting.js
- src/metrics/trendAnalysis.js
- src/metrics/scalingRecommendations.js

$END$